name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: griffin-ca510
  SERVICE: gryffen-backend
  REGION: us-central1

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: 'actions/checkout@v3'
    - name: Build the Docker image
      run: docker build . --file deploy/Dockerfile --tag "ithomaslin/gryffen:${{ github.sha }}" --platform linux/amd64

    - name: Log in to Docker Hub
      uses: 'docker/login-action@v3'
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Push the Docker image to Docker Hub repo
      run: docker push "ithomaslin/gryffen:${{ github.sha }}"

  deploy:

    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: 'actions/checkout@v2'

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy to Google Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ithomaslin/gryffen:${{ github.sha }}
          labels:
            port=8000
            set-env-vars=[
              GRYFFEN_RELOAD=${{ env.GRYFFEN_RELOAD }},
              GRYFFEN_SECRET_KEY=${{ secrets.GRYFFEN_SECRET_KEY }},
              HASH_ITERATION=${{ env.HASH_ITERATION }},
              NUM_BENCHMARK=${{ env.NUM_BENCHMARK }},
              UNIX_TIMESTAMP_NEVER_EXPIRE=${{ env.UNIX_TIMESTAMP_NEVER_EXPIRE }},
              FRONT_END_BASE_URL=${{ env.FRONT_END_BASE_URL }},
              EMAIL_FROM=${{ env.EMAIL_FROM }},
              SERVICE_ACCOUNT_KEY=${{ secrets.SERVICE_ACCOUNT_KEY }},
              ACCESS_TOKEN_HASH_ALGO=${{ env.ACCESS_TOKEN_HASH_ALGO }},
              ACCESS_TOKEN_EXPIRE_MINUTES=${{ env.ACCESS_TOKEN_EXPIRE_MINUTES }},
              OAUTH_TOKEN_EXPIRE_MINUTES=${{ emv.OAUTH_TOKEN_EXPIRE_MINUTES }},
              DB_HOST=${{ secrets.DB_HOST }},
              DB_USER=${{ secrets.DB_USER }},
              DB_PASS=${{ secrets.DB_PASS }},
              DB_NAME=${{ secrets.DB_NAME }},
              DB_PORT=${{ secrets.DB_PORT }},
              FINNHUB_API_KEY=${{ secrets.FINNHUB_API_KEY }},
              FINNHUB_WEBSOCKET_URI=${{ env.FINNHUB_WEBSOCKET_URI }},
              TD_API_AUTH_GATEWAY=${{ env.TD_API_AUTH_GATEWAY }},
              TD_API_CONSUMER_KEY=${{ secrets.TD_API_CONSUMER_KEY }},
              TD_API_REDIRECT_URL=${{ env.TD_API_REDIRECT_URL }},
              TD_API_BASE_URL=${{ env.TD_API_BASE_URL }},
              TD_API_AUTH_URL=${{ env.TD_API_AUTH_URL }},
              TD_API_ORDERS_URL=${{ env.TD_API_ORDERS_URL }},
              ALPACA_API_KEY=${{ secrets.ALPACA_API_KEY }},
              ALPACA_SECRET_KEY=${{ secrets.ALPACA_SECRET_KEY }}
            ]

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
