name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: griffin-ca510
  SERVICE: gryffen
  REGION: us-central1

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: 'actions/checkout@v3'
    - name: Build the Docker image
      run: docker build . --file deploy/Dockerfile --tag "ithomaslin/gryffen:${{ github.sha }}" --platform linux/amd64

    - name: Log in to Docker Hub
      uses: 'docker/login-action@v3'
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Push the Docker image to Docker Hub repo
      run: docker push "ithomaslin/gryffen:${{ github.sha }}"

  deploy:

    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        
      - name: Apply GitHub Actions secrets
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          GRYFFEN_SECRET_KEY: ${{ secrets.GRYFFEN_SECRET_KEY }}
          SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
          ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
        run: |
          echo "Setting DB_HOST value: $DB_HOST"
          echo "Setting DB_USER value: $DB_USER"
          echo "Setting DB_PASS value: $DB_PASS"
          echo "Setting DB_NAME value: $DB_NAME"
          echo "Setting DB_PORT value: $DB_PORT"
          echo "Setting GRYFFEN_SECRET_KEY value: $GRYFFEN_SECRET_KEY"
          echo "Setting SERVICE_ACCOUNT_KEY value: $SERVICE_ACCOUNT_KEY"
          echo "Setting FINNHUB_API_KEY value: $FINNHUB_API_KEY"
          echo "Setting ALPACA_API_KEY value: $ALPACA_API_KEY"
          echo "Setting ALPACA_SECRET_KEY value: $ALPACA_SECRET_KEY"

      - name: Store Secret in Google Cloud Secret Manager
        run: |
          echo -n $DB_HOST | gcloud secrets create DB_HOST --data-file=- --locations=[us-central1]
          echo -n $DB_USER | gcloud secrets create DB_USER --data-file=- --locations=[us-central1]
          echo -n $DB_PASS | gcloud secrets create DB_PASS --data-file=- --locations=[us-central1]
          echo -n $DB_NAME | gcloud secrets create DB_NAME --data-file=- --locations=[us-central1]
          echo -n $DB_PORT | gcloud secrets create DB_PORT --data-file=- --locations=[us-central1]
          echo -n $GRYFFEN_SECRET_KEY | gcloud secrets create GRYFFEN_SECRET_KEY --data-file=- --locations=[us-central1]
          echo -n $SERVICE_ACCOUNT_KEY | gcloud secrets create SERVICE_ACCOUNT_KEY --data-file=- --locations=[us-central1]
          echo -n $FINNHUB_API_KEY | gcloud secrets create FINNHUB_API_KEY --data-file=- --locations=[us-central1]
          echo -n $ALPACA_API_KEY | gcloud secrets create ALPACA_API_KEY --data-file=- --locations=[us-central1]
          echo -n $ALPACA_SECRET_KEY | gcloud secrets create ALPACA_SECRET_KEY --data-file=- --locations=[us-central1]
          
      - name: Deploy to Google Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ithomaslin/gryffen:${{ github.sha }}
          flags: |
            --port=8000
            --allow-unauthenticated
          env_vars: |
            GRYFFEN_RELOAD=${{ vars.GRYFFEN_RELOAD }}
            HASH_ITERATION=${{ vars.HASH_ITERATION }}
            NUM_BENCHMARK=${{ vars.NUM_BENCHMARK }}
            UNIX_TIMESTAMP_NEVER_EXPIRE=${{ vars.UNIX_TIMESTAMP_NEVER_EXPIRE }}
            FRONT_END_BASE_URL=${{ vars.FRONT_END_BASE_URL }}
            EMAIL_FROM=${{ vars.EMAIL_FROM }}
            ACCESS_TOKEN_HASH_ALGO=${{ vars.ACCESS_TOKEN_HASH_ALGO }}
            ACCESS_TOKEN_EXPIRE_MINUTES=${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
            OAUTH_TOKEN_EXPIRE_MINUTES=${{ vars.OAUTH_TOKEN_EXPIRE_MINUTES }}
            FINNHUB_WEBSOCKET_URI=${{ vars.FINNHUB_WEBSOCKET_URI }}
            TD_API_AUTH_GATEWAY=${{ vars.TD_API_AUTH_GATEWAY }}
            TD_API_CONSUMER_KEY=${{ secrets.TD_API_CONSUMER_KEY }}
            TD_API_REDIRECT_URL=${{ vars.TD_API_REDIRECT_URL }}
            TD_API_BASE_URL=${{ vars.TD_API_BASE_URL }}
            TD_API_AUTH_URL=${{ vars.TD_API_AUTH_URL }}
            TD_API_ORDERS_URL=${{ vars.TD_API_ORDERS_URL }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
